services:
  postservice:
    build:
      context: .
      dockerfile: Onlycats.PostService/Dockerfile
    ports:
      - "8083:8080"
    networks:
      - onlycats-network
    # secrets: 
    #   - mongodb_connection_string
    volumes:
      - ./Onlycats.PostService:/src/Onlycats.PostService
      - images:/app/images
    depends_on:
      - postgresdb
      - mongodb
  interactionservice:
     build:
       context: .
       dockerfile: Onlycats.InteractionService/Dockerfile
     ports:
       - "8081:8080"
     networks:
       - onlycats-network
     environment:
       - ASPNETCORE_ENVIRONMENT=Development
    #  secrets: 
    #    - mongodb_connection_string
     volumes:
      - ./Onlycats.InteractionService:/src/Onlycats.InteractionService
     depends_on:
      - mongodb
      - postgresdb
    
  postgresdb:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: onlycats
    ports:
      - "5432:5432"
    networks:
      - onlycats-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U postgres"] 
      interval: 10s 
      timeout: 5s 
      retries: 5
  userservice:
     build:
       context: .
       dockerfile: Onlycats.UserService/Dockerfile
     ports:
       - "8082:8080"
     networks:
       - onlycats-network
     environment:
       - ASPNETCORE_ENVIRONMENT=Development
       - POSTGRES_HOST=onlycats-postgresdb-1
       - POSTGRES_PORT=5432
       - POSTGRES_DB=onlycats
       - POSTGRES_USER=postgres
       - POSTGRES_PASSWORD=1234
     depends_on:
       - postgresdb
    #  secrets:
    #    - postgres_connection_string
     volumes:
       - ./Onlycats.UserService:/src/Onlycats.UserService
    # entrypoint: > 
    #  sh -c "sleep 10 && dotnet ef migrations add InitialCreate && dotnet ef database update --no-build && dotnet Onlycats.UserService.dll"
  gateway:
     build:
       context: ./Gateway
       dockerfile: Dockerfile
     ports:
       - "8000:8080"
     networks:
       - onlycats-network
     environment:
       - ASPNETCORE_ENVIRONMENT=Development
     volumes:
       - ./Onlycats:/src/Onlycats
     depends_on:
       - postservice
       - interactionservice
       - userservice
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=Ivan
      - MONGO_INITDB_ROOT_PASSWORD=mongodatabase
      - MONGO_INITDB_DATABASE=onlycats
    ports:
      - "27017:27017"
    networks:
      - onlycats-network
    volumes:
      - mongodb_data:/data/db
      - ./mongoinit.js:/docker-entrypoint-mongoinit.d
networks:
  onlycats-network:
    driver: bridge
    attachable: true
volumes:
 pgdata:
 images:
 mongodb_data:
# secrets:
#   mongodb_connection_string:
#     external: true
#   postgres_connection_string:
#     external: true